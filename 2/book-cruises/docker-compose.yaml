services:
  postgres:
    image: postgres:15
    container_name: postgres
    restart: on-failure
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: book-cruises
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - default
  
  db_init:
    container_name: db_init
    restart: no
    build:
      context: .
      dockerfile: Dockerfile
    image: book-cruises
    depends_on:
      - postgres
    env_file:
      - .env
    environment:
      DB_HOST: postgres
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_PORT: 5432
    command: >
      sh -c "
      while ! pg_isready -h postgres -p 5432 -U ${DB_USER}; do
        echo 'Waiting for PostgreSQL to be ready...';
        sleep 2;
      done;
      uv run -m src.book_cruises.commons.database.db_init;
      "
    # volumes:
    #   - .:/app
    working_dir: /app
    networks:
      - default

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: on-failure
    depends_on:
      - db_init
    ports:
      - "5672:5672"    # Porta usada pelos clientes (AMQP)
      - "15672:15672"  # Porta do painel de administração (Web UI)
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - default

  book_svc:
    container_name: book_svc
    build:
      context: .
      dockerfile: Dockerfile
    image: book-cruises
    restart: no
    depends_on:
      - rabbitmq
    ports:
      - "5001:5001"
    env_file:
      - .env
    command: >
      sh -c "
      sleep 15;
      uv run book-svc;
      "
    # volumes:
    #   - .:/app
    working_dir: /app
    networks:
      - default
  
  payment_svc:
    container_name: payment_svc
    build:
      context: .
      dockerfile: Dockerfile
    image: book-cruises
    restart: no
    depends_on:
      - book_svc
    env_file:
      - .env
    command: >
      sh -c "
      sleep 20;
      uv run payment-svc;
      "
    # volumes:
    #   - .:/app
    working_dir: /app
    networks:
      - default
  
  ticket_svc:
    container_name: ticket_svc
    build:
      context: .
      dockerfile: Dockerfile
    image: book-cruises
    restart: no
    depends_on:
      - book_svc
    env_file:
      - .env
    command: >
      sh -c "
      sleep 20;
      uv run ticket-svc;
      "
    # volumes:
    #   - .:/app
    working_dir: /app
    networks:
      - default
  
  marketing_svc:
    container_name: marketing_svc
    build:
      context: .
      dockerfile: Dockerfile
    image: book-cruises
    restart: no
    depends_on:
      - book_svc
    env_file:
      - .env
    command: >
      sh -c "
      sleep 20;
      uv run marketing-svc;
      "
    # volumes:
    #   - .:/app
    working_dir: /app
    networks:
      - default
  
  app:
    container_name: app
    build:
      context: .
      dockerfile: Dockerfile
    image: book-cruises
    restart: no
    depends_on:
      - book_svc
    ports:
      - "5000:5000"  
    env_file:
      - .env
    command: >
      sh -c "
      sleep 20;
      uv run app;
      "
    # volumes:
    #   - .:/app
    working_dir: /app
    networks:
      - default

networks:
  default:
    driver: bridge

volumes:
  rabbitmq_data:
  postgres_data:
