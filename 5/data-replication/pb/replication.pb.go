// --- proto/replication.proto ---

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.24.4
// source: replication.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WriteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          string                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteRequest) Reset() {
	*x = WriteRequest{}
	mi := &file_replication_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteRequest) ProtoMessage() {}

func (x *WriteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_replication_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteRequest.ProtoReflect.Descriptor instead.
func (*WriteRequest) Descriptor() ([]byte, []int) {
	return file_replication_proto_rawDescGZIP(), []int{0}
}

func (x *WriteRequest) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type WriteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteResponse) Reset() {
	*x = WriteResponse{}
	mi := &file_replication_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteResponse) ProtoMessage() {}

func (x *WriteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_replication_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteResponse.ProtoReflect.Descriptor instead.
func (*WriteResponse) Descriptor() ([]byte, []int) {
	return file_replication_proto_rawDescGZIP(), []int{1}
}

func (x *WriteResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type ReadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadRequest) Reset() {
	*x = ReadRequest{}
	mi := &file_replication_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadRequest) ProtoMessage() {}

func (x *ReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_replication_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadRequest.ProtoReflect.Descriptor instead.
func (*ReadRequest) Descriptor() ([]byte, []int) {
	return file_replication_proto_rawDescGZIP(), []int{2}
}

type ReadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Entries       []*LogEntry            `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadResponse) Reset() {
	*x = ReadResponse{}
	mi := &file_replication_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadResponse) ProtoMessage() {}

func (x *ReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_replication_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadResponse.ProtoReflect.Descriptor instead.
func (*ReadResponse) Descriptor() ([]byte, []int) {
	return file_replication_proto_rawDescGZIP(), []int{3}
}

func (x *ReadResponse) GetEntries() []*LogEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type LogEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Epoch         int32                  `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	Offset        int32                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Data          string                 `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Committed     bool                   `protobuf:"varint,4,opt,name=committed,proto3" json:"committed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogEntry) Reset() {
	*x = LogEntry{}
	mi := &file_replication_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEntry) ProtoMessage() {}

func (x *LogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_replication_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogEntry.ProtoReflect.Descriptor instead.
func (*LogEntry) Descriptor() ([]byte, []int) {
	return file_replication_proto_rawDescGZIP(), []int{4}
}

func (x *LogEntry) GetEpoch() int32 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *LogEntry) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *LogEntry) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *LogEntry) GetCommitted() bool {
	if x != nil {
		return x.Committed
	}
	return false
}

type CommitRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Epoch         int32                  `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	Offset        int32                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitRequest) Reset() {
	*x = CommitRequest{}
	mi := &file_replication_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitRequest) ProtoMessage() {}

func (x *CommitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_replication_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitRequest.ProtoReflect.Descriptor instead.
func (*CommitRequest) Descriptor() ([]byte, []int) {
	return file_replication_proto_rawDescGZIP(), []int{5}
}

func (x *CommitRequest) GetEpoch() int32 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *CommitRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type Ack struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ack) Reset() {
	*x = Ack{}
	mi := &file_replication_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ack) ProtoMessage() {}

func (x *Ack) ProtoReflect() protoreflect.Message {
	mi := &file_replication_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ack.ProtoReflect.Descriptor instead.
func (*Ack) Descriptor() ([]byte, []int) {
	return file_replication_proto_rawDescGZIP(), []int{6}
}

func (x *Ack) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *Ack) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_replication_proto protoreflect.FileDescriptor

const file_replication_proto_rawDesc = "" +
	"\n" +
	"\x11replication.proto\x12\vreplication\"\"\n" +
	"\fWriteRequest\x12\x12\n" +
	"\x04data\x18\x01 \x01(\tR\x04data\"'\n" +
	"\rWriteResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\"\r\n" +
	"\vReadRequest\"?\n" +
	"\fReadResponse\x12/\n" +
	"\aentries\x18\x01 \x03(\v2\x15.replication.LogEntryR\aentries\"j\n" +
	"\bLogEntry\x12\x14\n" +
	"\x05epoch\x18\x01 \x01(\x05R\x05epoch\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x05R\x06offset\x12\x12\n" +
	"\x04data\x18\x03 \x01(\tR\x04data\x12\x1c\n" +
	"\tcommitted\x18\x04 \x01(\bR\tcommitted\"=\n" +
	"\rCommitRequest\x12\x14\n" +
	"\x05epoch\x18\x01 \x01(\x05R\x05epoch\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x05R\x06offset\"9\n" +
	"\x03Ack\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage2\x85\x01\n" +
	"\x06Leader\x12>\n" +
	"\x05Write\x12\x19.replication.WriteRequest\x1a\x1a.replication.WriteResponse\x12;\n" +
	"\x04Read\x12\x18.replication.ReadRequest\x1a\x19.replication.ReadResponse2z\n" +
	"\aReplica\x127\n" +
	"\fReplicateLog\x12\x15.replication.LogEntry\x1a\x10.replication.Ack\x126\n" +
	"\x06Commit\x12\x1a.replication.CommitRequest\x1a\x10.replication.AckB\x18Z\x16data-replication/pb;pbb\x06proto3"

var (
	file_replication_proto_rawDescOnce sync.Once
	file_replication_proto_rawDescData []byte
)

func file_replication_proto_rawDescGZIP() []byte {
	file_replication_proto_rawDescOnce.Do(func() {
		file_replication_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_replication_proto_rawDesc), len(file_replication_proto_rawDesc)))
	})
	return file_replication_proto_rawDescData
}

var file_replication_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_replication_proto_goTypes = []any{
	(*WriteRequest)(nil),  // 0: replication.WriteRequest
	(*WriteResponse)(nil), // 1: replication.WriteResponse
	(*ReadRequest)(nil),   // 2: replication.ReadRequest
	(*ReadResponse)(nil),  // 3: replication.ReadResponse
	(*LogEntry)(nil),      // 4: replication.LogEntry
	(*CommitRequest)(nil), // 5: replication.CommitRequest
	(*Ack)(nil),           // 6: replication.Ack
}
var file_replication_proto_depIdxs = []int32{
	4, // 0: replication.ReadResponse.entries:type_name -> replication.LogEntry
	0, // 1: replication.Leader.Write:input_type -> replication.WriteRequest
	2, // 2: replication.Leader.Read:input_type -> replication.ReadRequest
	4, // 3: replication.Replica.ReplicateLog:input_type -> replication.LogEntry
	5, // 4: replication.Replica.Commit:input_type -> replication.CommitRequest
	1, // 5: replication.Leader.Write:output_type -> replication.WriteResponse
	3, // 6: replication.Leader.Read:output_type -> replication.ReadResponse
	6, // 7: replication.Replica.ReplicateLog:output_type -> replication.Ack
	6, // 8: replication.Replica.Commit:output_type -> replication.Ack
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_replication_proto_init() }
func file_replication_proto_init() {
	if File_replication_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_replication_proto_rawDesc), len(file_replication_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_replication_proto_goTypes,
		DependencyIndexes: file_replication_proto_depIdxs,
		MessageInfos:      file_replication_proto_msgTypes,
	}.Build()
	File_replication_proto = out.File
	file_replication_proto_goTypes = nil
	file_replication_proto_depIdxs = nil
}
